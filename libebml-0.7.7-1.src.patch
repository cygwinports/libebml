diff -urN -x CYGWIN-PATCHES -x 'aclocal.m4*' -x autom4te.cache -x config.cache -x config.log -x config.status -x config.h -x config.h.in -x ABOUT-NLS -x Makefile.in.in -x Makevars.template -x '*.class' -x '*.pyc' -x '*.mo' -x '*.gmo' -x '*.orig' -x '*.rej' -x '*.temp' -x '*~' -x '*.stackdump' -x COPYING -x INSTALL -x compile -x config-ml.in -x config.guess -x config.sub -x depcomp -x elisp-comp -x install-sh -x ltmain.sh -x mdate-sh -x missing -x mkinstalldirs -x py-compile -x symlink-tree -x texinfo.tex -x ylwrap -x omf.make -x xmldocs.make -x gnome-doc-utils.make -x gnome-doc-utils.m4 -x intltool.m4 -x intltool-extract -x intltool-extract.in -x intltool-merge -x intltool-merge.in -x intltool-update -x intltool-update.in origsrc/libebml-0.7.7/make/cygwin/Makefile src/libebml-0.7.7/make/cygwin/Makefile
--- origsrc/libebml-0.7.7/make/cygwin/Makefile	1969-12-31 18:00:00.000000000 -0600
+++ src/libebml-0.7.7/make/cygwin/Makefile	2007-04-08 00:16:29.593750000 -0500
@@ -0,0 +1,139 @@
+# libebml Makefile
+# $Id: libebml-0.7.7-1.src.patch,v 1.1 2007-04-08 05:53:19 yselkowitz Exp $
+# Author: Steve Lhomme <robux4 @ users.sf.net>
+# Author: Moritz Bunkus <moritz @ bunkus.org>
+# Author: Yaakov - Cygwin Ports (yselkowitz @ users.sf.net>
+
+#
+# The library is built without debug information. If you want
+# debug information to be included then compile with
+# 'make DEBUG=yes'.
+#
+
+# Paths
+prefix=/usr
+bindir=$(prefix)/bin
+libdir=$(prefix)/lib
+includedir=$(prefix)/include/ebml
+
+# Programs
+CXX=g++
+LD=$(CXX)
+AR = ar rcvu
+RANLIB = ranlib
+INSTALL = install
+INSTALL_OPTS = -m 644
+INSTALL_OPTS_LIB = -m 644
+INSTALL_DIR_OPTS = -m 755
+
+# Options
+EXTENSION=.cpp
+
+ifeq (yes,$(DEBUG))
+DEBUGFLAGS=-g -DDEBUG
+endif
+
+ifneq (,$(shell $(CXX) -v 2>&1 | tail -n 1 | grep -i mingw))
+$(error Please use the Makefile in ../mingw32)
+endif
+
+CWD=$(shell pwd)
+
+SRC_DIR=$(CWD)/../../src/
+INCLUDE_DIR=$(CWD)/../../ebml
+
+# Librarires
+INCLUDE=-I$(CWD)/../..
+LIBS=
+
+# Names
+LIBRARY=libebml.a
+LIBRARY_SO=libebml.dll.a
+LIBRARY_SO_VER=cygebml-0.dll
+
+# source-files
+sources:=$(wildcard ${SRC_DIR}*$(EXTENSION))
+
+# header files; replace .cxx extension with .h
+headers:=$(patsubst %$(EXTENSION),%.h,$(sources))
+
+# object files; replace .cxx extension with .o
+objects:=$(patsubst %$(EXTENSION),%.o,$(sources))
+objects_so:=$(patsubst %$(EXTENSION),%.lo,$(sources))
+
+WARNINGFLAGS=-Wall -Wno-unknown-pragmas -ansi -fno-gnu-keywords -Wshadow
+COMPILEFLAGS=$(WARNINGFLAGS) $(CXXFLAGS) $(CPPFLAGS) $(DEBUGFLAGS) $(INCLUDE)
+DEPENDFLAGS  = $(CXXFLAGS) $(INCLUDE)
+
+all: staticlib sharedlib
+
+staticlib: $(LIBRARY)
+
+sharedlib: $(LIBRARY_SO)
+
+lib:
+	@echo "Use the 'staticlib', 'sharedlib' or 'all' targets."
+	@false
+
+# Build rules
+%.o: %$(EXTENSION)
+	$(CXX) -c $(COMPILEFLAGS) -o $@ $<
+
+%.lo: %$(EXTENSION)
+	$(CXX) -c $(COMPILEFLAGS) -o $@ $<
+
+$(LIBRARY): $(objects)
+	$(AR) $@ $(objects)
+	$(RANLIB) $@
+
+$(LIBRARY_SO): $(objects_so)
+	$(CXX) -shared -Wl,--enable-auto-image-base -Wl,--out-implib,$(LIBRARY_SO) -o $(LIBRARY_SO_VER) $(objects_so)
+
+clean:
+	rm -f $(objects) $(objects_so)
+	rm -f $(LIBRARY)
+	rm -f $(LIBRARY_SO)
+	rm -f $(LIBRARY_SO_VER)
+	rm -f CORE
+
+distclean dist-clean: clean
+	rm -f .depend
+
+depend:
+	@echo Calculating dependecies:
+	@rm -f .depend
+	@touch .depend
+	@for i in $(sources); do \
+		o="`echo $$i | sed -e 's/\.c$$/.o/' -e 's/\.cpp$$/.o/'`" ; \
+		echo '  ' $$i: $$o ; \
+		$(CXX) $(DEPENDFLAGS) -MM -MT $$o $$i >> .depend ; \
+	done
+
+install: install_staticlib install_sharedlib install_headers
+
+install_headers:
+	$(INSTALL) $(INSTALL_DIR_OPTS) -d $(includedir)
+	for i in $(INCLUDE_DIR)/*.h; do \
+		$(INSTALL) $(INSTALL_OPTS) $$i $(includedir) ; \
+	done
+	$(INSTALL) $(INSTALL_DIR_OPTS) -d $(includedir)/c
+	for i in $(INCLUDE_DIR)/c/*.h; do \
+		$(INSTALL) $(INSTALL_OPTS) $$i $(includedir)/c ; \
+	done
+
+install_staticlib: $(LIBRARY)
+	$(INSTALL) $(INSTALL_DIR_OPTS) -d $(libdir)
+	$(INSTALL) $(INSTALL_OPTS_LIB) $(LIBRARY) $(libdir)
+
+install_sharedlib: $(LIBRARY_SO)
+	$(INSTALL) $(INSTALL_DIR_OPTS) -d $(libdir)
+	$(INSTALL) $(INSTALL_DIR_OPTS) -d $(bindir)
+	$(INSTALL) $(INSTALL_OPTS_LIB) $(LIBRARY_SO) $(libdir)
+	$(INSTALL) $(INSTALL_OPTS_LIB) $(LIBRARY_SO_VER) $(bindir)
+
+
+ifneq ($(wildcard .depend),)
+include .depend
+endif
+
+# DO NOT DELETE
